#!/bin/sh /etc/rc.common
# Basic init script
#
# Copyright (C) 2018 LPN Plant
#

START=91
USE_PROCD=1
PROG=/usr/sbin/swupdate
PIDFILE=/var/run/swupdate.pid
CONFIG=/etc/swu/swupdate.cfg

start_service() {
  local url
  local id_pfx
  local id_cmd
  local id
  local image_select
  local current_part
  local extra_args
  local server_ip
  local ping_result
  local ping_timeout
  local start_time
  local srv_conn_ok

  ping_timeout=$(( 120 )) # seconds

  config_load 'swupdate'
  config_get url 'surricata' 'url'
  config_get id_pfx 'surricata' 'id_pfx' 'unknown'
  config_get id_cmd 'surricata' 'id_cmd'


  [ -n "$url" ] || return

  if [ -x "$id_cmd" ]; then
    id=${id_pfx}-$($id_cmd)
  else
    id=${id_pfx}-unknown
  fi

  current_part=$(cat /proc/cmdline | sed -e 's/.*vmlinuz_//' -e 's/ root.*//')

  if [ $current_part == '0' ]; then
    image_select="stable,copy-2"
  else
    image_select="stable,copy-1"
  fi

  state=$(grub-editenv - list | grep ustate | cut -f 2 -d'=')
  case "$state" in
  "1")
    srv_conn_ok=0
    server_ip=$(echo "$url" | grep -Eo '([0-9]*\.){3}[0-9]*')
    start_time=$(date +%s)
    while [[ $(( $(date +%s) - $start_time < $ping_timeout )) != '0' ]]; do
      ping "$server_ip" -c 1 -W 5 && {
        srv_conn_ok=1
        break
      }
      sleep 1
    done
    mount -o remount,rw /boot
    if [ $srv_conn_ok == '1' ]; then
      extra_args="-c 2"
      grub-editenv - set fback=$current_part
      grub-editenv - set ustate=0
      mount -o remount,ro /boot
    else
      grub-editenv - set ustate=2
      reboot
      exit 1
    fi
    ;;
  "2")
    mount -o remount,rw /boot
    extra_args="-c 3"
    grub-editenv - set ustate=0
    mount -o remount,ro /boot
    ;;
  *)
    extra_args=""
    ;;
  esac

  procd_open_instance swupdate
  procd_set_param command ${PROG} -f ${CONFIG} -e ${image_select} -u "-x ${extra_args} -u ${url} -i ${id}"

  # respawn automatically if something died, be careful if you have an alternative process supervisor
  # if process dies sooner than respawn_threshold, it is considered crashed and after 5 retries the service is stopped
  procd_set_param respawn ${respawn_threshold:-3600} ${respawn_timeout:-5} ${respawn_retry:-5}

  procd_set_param pidfile ${PIDFILE} # write a pid file on instance start and remote it on stop
  procd_close_instance

} 
